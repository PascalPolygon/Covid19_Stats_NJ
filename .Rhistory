choose(10, 4)
choose(26, 4)
choose(24, 4)
10626/210
1/50.6
q()
choose(5,2)
choose(10,1)
?dlnorm
plnorm(125, 122.246, 181.927)
dlnorm(125, 122.246, 181.927)
plnorm(125, , 4.8, 0.11)
plnorm(125,4.8, 0.11)
plnorm(125,4.8, 0.11)-plnorm(110,4.8, 0.11)
qlnorm(0.5,4.8, 0.11)
1-plnorm(125,4.8, 0.11)
qlnorm(0.05,4.8, 0.11)
pweilbull(250,2.4, 180)
pweibull(250,2.4,180)
1-pweibull(250,2.4,180)
pweibull(249,2.4,180)
1-pweibull(300,2.4,180)
qweibull(250,2.4,180)-qweibull(100,2.4,180)
weibull(250,2.4,180)-pweibull(100,2.4,180)
pweibull(250,2.4,180)-pweibull(100,2.4,180)
qweibull(0.5,2.4,180)
?dexp
pexp(100,0.01417)
pexp(100,0.01417)
pexp(200,0.01417)
pexp(200,0.01417)-pexp(100,0.01417)
1-pexp(E+2*SD,0.01417)
E = 70.572
SD = 70.572
1-pexp(E+2*SD,0.01417)
qexp(0.5,0.01417)
choose(3,2)
choose(3,3)
vector <- c(7.3,
7.4,
8.2,
5.5,
6.3,
9.0,
11.6,
7.9,
10.7,
11.8,
8.1,
8.2,
7.0,
7.7,
9.7,
11.3,
7.7,
6.5,
6.8,
8.7,
7.0,
9.7,
7.5,
6.3,
6.8,
7.2,
7.8
)
mean(vector)
?dnorm
mean = mean(vector)
stdv = sd(vector)
qnorm(0.5, mean, stdv)
stdv
1-pnorm(10, mean, stdv)
stdv/mean
set.seed(124)
norm <- rnorm(16, 16, 0.02)
mean(norm)
set.seed(124)
norm <- rnorm(16, 16, 0.02)
mean(norm)
set.seed(124)
norm <- rnorm(16, 16, 0.02)
mean(norm)
set.seed(124)
norm <- rnorm(16, 16, 0.02)
mean(norm)
set.seed(124)
norm <- rnorm(16, 16, 0.02)
mean(norm)
set.seed(124)
norm <- rnorm(16, 16, 0.02)
mean(norm)
sd(norm)
mean(beams)-mean(cyl)
beams <-c(5.1,7.2,7.3,6.3,8.1,6.8,7.0,7.0,6.8,6.5,7.0,6.3,7.9,9.0,
8.0,8.7,7.8,9.7,7.4,7.7,9.7,8.2,7.7,11.6,11.3,11.8,10.7)
cyl <-c(6.3,5.8,7.8,7.1,7.2,9.2,6.6,8.3,7.0,8.5,
7.6,8.1,7.4,8.5,8.9,9.8,9.7,14.1,12.6,11.6)
mean(beams)-mean(cyl)
bsd = sd(beams)
cylsd = sd(cyl)
bsd/cylsd
install.packages("readxl")
setwd("/home/pascal/math_prj_exp")
xls_example <- readxl_example("Income_Dist3.xls")
read_excel(xls_example)
library(readxl)
setwd("/home/pascal/math_prj_exp")
# xls_example <- readxl_example("Income_Dist3.xls")
data <- read_excel("Income_Dist3.xls")
print(data)
print(data[0])
print(data[2])
print(data[3])
print(data[3][3])
print(data[3,3])
print(data[2,3])
print(data[65,3])
library(ggplot2)
setwd("/home/pascal/math_prj_exp")
################################################################
################################################################
cov19State = read.table("us-states.csv",sep = ',',header=T)
cov19County = read.table("us-counties.csv",sep = ',',header=T,quote = "")
nj = cov19State[which(cov19State$state == "New Jersey"),]
nj_counties = cov19County[which(cov19County$state == "New Jersey"),]
# print(nj_counties)
students = read.table("ElementarySecondary.csv",sep = ',',header=T,quote="")
# print(students$FIPS)
counties = nj_counties[,2]
counties = unique(counties) #Remove duplicates
num_counties = length(counties)
print(num_counties)
# print(counties[1])
county_cases <- array(numeric(),c(num_counties,1))
county_students <- array(numeric(),c(num_counties,1))
for (i in 1:num_counties){
print(counties[i])
ctn = nj_counties[which(nj_counties$county == counties[i]),];
fips = ctn$fips[1]
dates_arr = ctn[,1]
if (i == 11){ #County 11 is unknown
print(counties[i])
}
end_oct = match("2020-10-31", dates_arr)
last_row = dim(ctn)[1];
fips_i = match(fips, students$FIPS)
county_cases[i] = sum(ctn[1:end_oct,]$cases) #Array of number of cases by the end of Oct for each county
county_students[i] = students$FIPS[fips_i]
print("###############")
}
print(county_cases)
print(county_students)
# print(county_students[-11])
#Index/ices to be removed should not be hard coded
corCSNJ = cor(county_cases[-11],county_students[-11]) #Remove element at index 11 (unknown)
print(corCSNJ)
for (i in 1:22){
print(data[2,i])
}
for (i in 2:22){
print(data[2,i])
}
for (i in 2:23){
print(data[2,i])
}
for (i in 3:23){
print(data[2,i])
}
for (i in 3:23){
print(data[2,i])
print(data[65,i])
}
for (i in 3:23){
# print(data[2,i])
county = data[2,i]
county = str_split(county)[0]
print(county)
print(data[65,i])
}
library(ggplot2)
library(readxl)
library(stringr)
setwd("/home/pascal/math_prj_exp")
# xls_example <- readxl_example("Income_Dist3.xls")
data <- read_excel("Income_Dist3.xls")
for (i in 3:23){
# print(data[2,i])
county = data[2,i]
county = str_split(county, " ")[0]
print(county)
print(data[65,i])
}
install.packages("stringr")
library(ggplot2)
library(readxl)
library(stringr)
setwd("/home/pascal/math_prj_exp")
# xls_example <- readxl_example("Income_Dist3.xls")
data <- read_excel("Income_Dist3.xls")
for (i in 3:23){
# print(data[2,i])
county = data[2,i]
county = str_split(county, " ")[0]
print(county)
print(data[65,i])
}
